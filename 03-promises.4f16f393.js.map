{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA6BE,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAa,C,SACjBL,E,MACAC,GAGF,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLP,EACFK,EAAQF,GAERG,EAAOH,EAAA,GAERJ,EAAA,GAEP,CA3CWS,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GAGpB,GAFAA,EAAEC,iBAEED,EAAEE,cAAcd,MAAMe,MAAQ,GAAKH,EAAEE,cAAcE,OAAOD,OAAS,EACrE,OAAOnB,EAAAqB,OAAOC,QAAQ,qGAGxB,IAAIlB,EAAQmB,OAAOP,EAAEE,cAAcd,MAAMe,OACzC,MAAMK,EAAOD,OAAOP,EAAEE,cAAcM,KAAKL,OACnCC,EAASG,OAAOP,EAAEE,cAAcE,OAAOD,OAE7C,IAAK,IAAIhB,EAAW,EAAGA,GAAYiB,EAAQjB,GAAY,EACrDD,EAAcC,EAAUC,GACrBqB,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAqB,OAAOK,QAAQ,qBAAqBvB,QAAeC,MAAS,IAE7DuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAqB,OAAOO,QAAQ,oBAAoBzB,QAAeC,MAAS,IAE/DA,GAASoB,CAEb,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  if (e.currentTarget.delay.value < 0 || e.currentTarget.amount.value <= 0) {\n    return Notify.warning(\"Delay step and amount values must be positive numbers and the amount value must be more than zero\");\n} \n\n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    const PromiseObj = {\n      position,\n      delay,\n    };\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(PromiseObj);\n      } else {\n          reject(PromiseObj);\n      }\n      }, delay)\n    });\n  }"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","PromiseObj","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","currentTarget","value","amount","Notify","warning","Number","step","then","success","catch","failure"],"version":3,"file":"03-promises.4f16f393.js.map"}